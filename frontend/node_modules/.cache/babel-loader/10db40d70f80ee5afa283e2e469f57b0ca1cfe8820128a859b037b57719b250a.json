{"ast":null,"code":"var _jsxFileName = \"F:\\\\grad2\\\\TelePredict\\\\frontend\\\\src\\\\components\\\\prediction-page.tsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { FileText } from \"lucide-react\";\nimport { useState } from \"react\";\n\n// Define interfaces for the API responses\n\n// For displaying combined data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PredictionPage() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // State for data from /api/upload/\n  const [uploadedFileData, setUploadedFileData] = useState(null);\n\n  // State for data from /api/predict/\n  const [predictionResults, setPredictionResults] = useState(null);\n  const [isUploading, setIsUploading] = useState(false); // Specific for upload\n  const [isPredicting, setIsPredicting] = useState(false); // Specific for prediction\n\n  const [error, setError] = useState(null);\n  // uploadSuccessMessage can be used to indicate readiness for prediction\n  const [uploadSuccessMessage, setUploadSuccessMessage] = useState(null);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n      setUploadedFileData(null); // Reset previous upload data\n      setPredictionResults(null); // Reset previous predictions\n      setError(null);\n      setUploadSuccessMessage(null);\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setError(\"Please select a file first.\");\n      return;\n    }\n    setIsUploading(true);\n    setError(null);\n    setUploadedFileData(null);\n    setPredictionResults(null);\n    setUploadSuccessMessage(null);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    const authToken = localStorage.getItem(\"authToken\");\n    if (!authToken) {\n      setError(\"Authentication token not found. Please log in.\");\n      setIsUploading(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/upload/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        let errorMessage = `HTTP error! status: ${response.status}`;\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.message || errorData.detail || errorMessage;\n        } catch (e) {\n          errorMessage = response.statusText || errorMessage;\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json();\n      setUploadedFileData(data);\n      setUploadSuccessMessage(\"File uploaded successfully! Ready to get predictions.\");\n    } catch (err) {\n      setError(err.message || \"Failed to upload file.\");\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleGetPrediction = async () => {\n    if (!uploadedFileData || !uploadedFileData.file_id) {\n      setError(\"No file uploaded or file ID is missing. Please upload a file first.\");\n      return;\n    }\n    setIsPredicting(true);\n    setError(null);\n    setPredictionResults(null); // Clear previous predictions\n\n    const authToken = localStorage.getItem(\"authToken\");\n    if (!authToken) {\n      setError(\"Authentication token not found. Please log in.\");\n      setIsPredicting(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/predict/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\" // Important: Sending JSON\n        },\n        body: JSON.stringify({\n          file_id: uploadedFileData.file_id\n        }) // Send file_id\n      });\n      if (!response.ok) {\n        let errorMessage = `HTTP error! status: ${response.status}`;\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.message || errorData.detail || errorMessage;\n        } catch (e) {\n          errorMessage = response.statusText || errorMessage;\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json();\n      setPredictionResults(data);\n    } catch (err) {\n      setError(err.message || \"Failed to get predictions.\");\n    } finally {\n      setIsPredicting(false);\n    }\n  };\n\n  // --- Calculate summary statistics for \"Prediction Results\" section ---\n  let totalCustomers = 0;\n  let churnCount = 0;\n  let churnRiskPercentage = 0;\n  if (uploadedFileData !== null && uploadedFileData !== void 0 && uploadedFileData.preview && predictionResults !== null && predictionResults !== void 0 && predictionResults.predictions) {\n    totalCustomers = uploadedFileData.preview.length;\n    // Assuming predictions directly correspond to preview rows and 'true' or a specific string means churn\n    // Adjust this logic based on how your backend returns predictions (e.g., 1 for churn, 0 for no churn)\n    churnCount = predictionResults.predictions.filter(p => p === true || String(p).toLowerCase() === 'churn').length;\n    if (totalCustomers > 0) {\n      churnRiskPercentage = parseFloat((churnCount / totalCustomers * 100).toFixed(2));\n    }\n  } else if (uploadedFileData !== null && uploadedFileData !== void 0 && uploadedFileData.preview) {\n    totalCustomers = uploadedFileData.preview.length; // Show total customers even before prediction\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-8\",\n          children: \"Churn Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"1. Upload Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              className: \"mx-auto h-12 w-12 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-upload\",\n                className: \"cursor-pointer bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",\n                children: \"Choose File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file-upload\",\n                type: \"file\",\n                className: \"hidden\",\n                accept: \".csv\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 text-sm text-gray-500\",\n                children: \"or drag and drop (drag and drop not implemented yet)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 text-sm text-green-600\",\n                children: [\"Selected file: \", selectedFile.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), selectedFile && !uploadedFileData &&\n            /*#__PURE__*/\n            // Show upload button only if file selected and not yet uploaded\n            _jsxDEV(\"button\", {\n              onClick: handleFileUpload,\n              disabled: isUploading,\n              className: \"mt-4 bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:bg-gray-400\",\n              children: isUploading ? \"Uploading...\" : \"Upload File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), error && !uploadSuccessMessage &&\n          /*#__PURE__*/\n          // Show general errors if no success message\n          _jsxDEV(\"p\", {\n            className: \"mt-4 text-sm text-red-600 text-center\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), uploadSuccessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-sm text-green-600 text-center\",\n            children: uploadSuccessMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), uploadedFileData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"2. Get Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGetPrediction,\n            disabled: isPredicting || isUploading // Disable if predicting or still uploading\n            ,\n            className: \"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:bg-gray-400\",\n            children: isPredicting ? \"Getting Predictions...\" : \"Get Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), error && predictionResults === null &&\n          /*#__PURE__*/\n          // Show prediction-specific errors\n          _jsxDEV(\"p\", {\n            className: \"mt-4 text-sm text-red-600 text-center\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), uploadedFileData && uploadedFileData.preview && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: [\"Data Preview \", predictionResults ? \"& Predictions\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mb-4\",\n            children: [\"First \", uploadedFileData.preview.length, \" rows of the processed data.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"min-w-full divide-y divide-gray-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [uploadedFileData.columns.map((colName, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: colName\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this)), predictionResults && /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Prediction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bg-white divide-y divide-gray-200\",\n                children: uploadedFileData.preview.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [uploadedFileData.columns.map((colName, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                    children: String(row[colName])\n                  }, colIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 27\n                  }, this)), predictionResults && /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                    children: predictionResults.predictions[rowIndex] !== undefined ? String(predictionResults.predictions[rowIndex]) : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 27\n                  }, this)]\n                }, rowIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), uploadedFileData.columns.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mt-6 mb-2\",\n              children: \"Column Names\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc list-inside pl-5 text-sm text-gray-700\",\n              children: uploadedFileData.columns.map((colName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: colName\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Prediction Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-4 bg-gray-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Total Customers (in preview)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: totalCustomers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-4 bg-gray-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Predicted Churn (in preview)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: churnCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-4 bg-gray-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Churn Risk (in preview)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: [churnRiskPercentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"text-blue-600 hover:text-blue-800\",\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(PredictionPage, \"AvzhS0gMcxzkc/2mE0B2gqhNJwU=\");\n_c = PredictionPage;\nvar _c;\n$RefreshReg$(_c, \"PredictionPage\");","map":{"version":3,"names":["Link","FileText","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PredictionPage","_s","selectedFile","setSelectedFile","uploadedFileData","setUploadedFileData","predictionResults","setPredictionResults","isUploading","setIsUploading","isPredicting","setIsPredicting","error","setError","uploadSuccessMessage","setUploadSuccessMessage","handleFileChange","event","target","files","handleFileUpload","formData","FormData","append","authToken","localStorage","getItem","response","fetch","method","headers","Authorization","body","ok","errorMessage","status","errorData","json","message","detail","e","statusText","Error","data","err","handleGetPrediction","file_id","JSON","stringify","totalCustomers","churnCount","churnRiskPercentage","preview","predictions","length","filter","p","String","toLowerCase","parseFloat","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","accept","onChange","name","onClick","disabled","columns","map","colName","index","scope","row","rowIndex","colIndex","undefined","to","_c","$RefreshReg$"],"sources":["F:/grad2/TelePredict/frontend/src/components/prediction-page.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { FileText } from \"lucide-react\";\r\nimport { useState, ChangeEvent } from \"react\";\r\n\r\n// Define interfaces for the API responses\r\ninterface UploadResponseData { // Renamed from ApiResponse for clarity\r\n  file_id: string; // Assuming the backend returns 'file_id'\r\n  preview: any[];\r\n  columns: string[];\r\n}\r\n\r\ninterface PredictionResponseData {\r\n  predictions: (string | number | boolean)[]; // Array of prediction values\r\n}\r\n\r\n// For displaying combined data\r\ninterface DisplayRow extends Record<string, any> {\r\n  _prediction?: string | number | boolean; // Optional prediction property\r\n}\r\n\r\n\r\nexport default function PredictionPage() {\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  \r\n  // State for data from /api/upload/\r\n  const [uploadedFileData, setUploadedFileData] = useState<UploadResponseData | null>(null);\r\n  \r\n  // State for data from /api/predict/\r\n  const [predictionResults, setPredictionResults] = useState<PredictionResponseData | null>(null);\r\n  \r\n  const [isUploading, setIsUploading] = useState<boolean>(false); // Specific for upload\r\n  const [isPredicting, setIsPredicting] = useState<boolean>(false); // Specific for prediction\r\n  \r\n  const [error, setError] = useState<string | null>(null);\r\n  // uploadSuccessMessage can be used to indicate readiness for prediction\r\n  const [uploadSuccessMessage, setUploadSuccessMessage] = useState<string | null>(null);\r\n\r\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setSelectedFile(event.target.files[0]);\r\n      setUploadedFileData(null); // Reset previous upload data\r\n      setPredictionResults(null); // Reset previous predictions\r\n      setError(null);\r\n      setUploadSuccessMessage(null);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      setError(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setError(null);\r\n    setUploadedFileData(null);\r\n    setPredictionResults(null);\r\n    setUploadSuccessMessage(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    const authToken = localStorage.getItem(\"authToken\");\r\n    if (!authToken) {\r\n      setError(\"Authentication token not found. Please log in.\");\r\n      setIsUploading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/upload/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${authToken}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        let errorMessage = `HTTP error! status: ${response.status}`;\r\n        try {\r\n            const errorData = await response.json();\r\n            errorMessage = errorData.message || errorData.detail || errorMessage;\r\n        } catch (e) {\r\n            errorMessage = response.statusText || errorMessage;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      const data: UploadResponseData = await response.json();\r\n      setUploadedFileData(data);\r\n      setUploadSuccessMessage(\"File uploaded successfully! Ready to get predictions.\");\r\n\r\n    } catch (err: any) {\r\n      setError(err.message || \"Failed to upload file.\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleGetPrediction = async () => {\r\n    if (!uploadedFileData || !uploadedFileData.file_id) {\r\n      setError(\"No file uploaded or file ID is missing. Please upload a file first.\");\r\n      return;\r\n    }\r\n\r\n    setIsPredicting(true);\r\n    setError(null);\r\n    setPredictionResults(null); // Clear previous predictions\r\n\r\n    const authToken = localStorage.getItem(\"authToken\");\r\n    if (!authToken) {\r\n      setError(\"Authentication token not found. Please log in.\");\r\n      setIsPredicting(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/predict/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${authToken}`,\r\n          \"Content-Type\": \"application/json\", // Important: Sending JSON\r\n        },\r\n        body: JSON.stringify({ file_id: uploadedFileData.file_id }), // Send file_id\r\n      });\r\n\r\n      if (!response.ok) {\r\n        let errorMessage = `HTTP error! status: ${response.status}`;\r\n        try {\r\n            const errorData = await response.json();\r\n            errorMessage = errorData.message || errorData.detail || errorMessage;\r\n        } catch (e) {\r\n            errorMessage = response.statusText || errorMessage;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      const data: PredictionResponseData = await response.json();\r\n      setPredictionResults(data);\r\n\r\n    } catch (err: any) {\r\n      setError(err.message || \"Failed to get predictions.\");\r\n    } finally {\r\n      setIsPredicting(false);\r\n    }\r\n  };\r\n  \r\n  // --- Calculate summary statistics for \"Prediction Results\" section ---\r\n  let totalCustomers = 0;\r\n  let churnCount = 0;\r\n  let churnRiskPercentage = 0;\r\n\r\n  if (uploadedFileData?.preview && predictionResults?.predictions) {\r\n    totalCustomers = uploadedFileData.preview.length;\r\n    // Assuming predictions directly correspond to preview rows and 'true' or a specific string means churn\r\n    // Adjust this logic based on how your backend returns predictions (e.g., 1 for churn, 0 for no churn)\r\n    churnCount = predictionResults.predictions.filter(p => p === true || String(p).toLowerCase() === 'churn').length;\r\n    if (totalCustomers > 0) {\r\n      churnRiskPercentage = parseFloat(((churnCount / totalCustomers) * 100).toFixed(2));\r\n    }\r\n  } else if (uploadedFileData?.preview) {\r\n    totalCustomers = uploadedFileData.preview.length; // Show total customers even before prediction\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          <h1 className=\"text-3xl font-bold mb-8\">Churn Prediction</h1>\r\n          \r\n          {/* 1. Upload Data Section */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">1. Upload Data</h2>\r\n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\r\n              <FileText className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n              <div className=\"mt-4\">\r\n                <label htmlFor=\"file-upload\" className=\"cursor-pointer bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\">\r\n                  Choose File\r\n                </label>\r\n                <input id=\"file-upload\" type=\"file\" className=\"hidden\" accept=\".csv\" onChange={handleFileChange} />\r\n                <p className=\"mt-2 text-sm text-gray-500\">or drag and drop (drag and drop not implemented yet)</p>\r\n                {selectedFile && (\r\n                  <p className=\"mt-2 text-sm text-green-600\">Selected file: {selectedFile.name}</p>\r\n                )}\r\n              </div>\r\n              {selectedFile && !uploadedFileData && ( // Show upload button only if file selected and not yet uploaded\r\n                <button\r\n                  onClick={handleFileUpload}\r\n                  disabled={isUploading}\r\n                  className=\"mt-4 bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:bg-gray-400\"\r\n                >\r\n                  {isUploading ? \"Uploading...\" : \"Upload File\"}\r\n                </button>\r\n              )}\r\n            </div>\r\n            {error && !uploadSuccessMessage && ( // Show general errors if no success message\r\n              <p className=\"mt-4 text-sm text-red-600 text-center\">{error}</p>\r\n            )}\r\n            {uploadSuccessMessage && (\r\n              <p className=\"mt-4 text-sm text-green-600 text-center\">{uploadSuccessMessage}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* 2. Get Predictions Section (appears after successful upload) */}\r\n          {uploadedFileData && (\r\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">2. Get Predictions</h2>\r\n              <button\r\n                onClick={handleGetPrediction}\r\n                disabled={isPredicting || isUploading} // Disable if predicting or still uploading\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:bg-gray-400\"\r\n              >\r\n                {isPredicting ? \"Getting Predictions...\" : \"Get Predictions\"}\r\n              </button>\r\n              {error && predictionResults === null && ( // Show prediction-specific errors\r\n                 <p className=\"mt-4 text-sm text-red-600 text-center\">{error}</p>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Data Preview and Predictions Table */}\r\n          {uploadedFileData && uploadedFileData.preview && (\r\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n              <h2 className=\"text-xl font-semibold mb-2\">Data Preview {predictionResults ? \"& Predictions\" : \"\"}</h2>\r\n              <p className=\"text-sm text-gray-600 mb-4\">\r\n                First {uploadedFileData.preview.length} rows of the processed data.\r\n              </p>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      {uploadedFileData.columns.map((colName, index) => (\r\n                        <th key={index} scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          {colName}\r\n                        </th>\r\n                      ))}\r\n                      {predictionResults && (\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Prediction\r\n                        </th>\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {uploadedFileData.preview.map((row: Record<string, any>, rowIndex: number) => (\r\n                      <tr key={rowIndex}>\r\n                        {uploadedFileData.columns.map((colName, colIndex) => (\r\n                          <td key={colIndex} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {String(row[colName])}\r\n                          </td>\r\n                        ))}\r\n                        {predictionResults && (\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {/* Ensure predictionResults.predictions[rowIndex] exists */}\r\n                            {predictionResults.predictions[rowIndex] !== undefined ? String(predictionResults.predictions[rowIndex]) : 'N/A'}\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              {uploadedFileData.columns.length > 0 && (\r\n                <>\r\n                  <h3 className=\"text-lg font-semibold mt-6 mb-2\">Column Names</h3>\r\n                  <ul className=\"list-disc list-inside pl-5 text-sm text-gray-700\">\r\n                    {uploadedFileData.columns.map((colName, index) => (\r\n                      <li key={index}>{colName}</li>\r\n                    ))}\r\n                  </ul>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Prediction Results Summary Section */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Prediction Summary</h2>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex justify-between items-center p-4 bg-gray-50 rounded\">\r\n                <span className=\"font-medium\">Total Customers (in preview)</span>\r\n                <span className=\"text-gray-600\">{totalCustomers}</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center p-4 bg-gray-50 rounded\">\r\n                <span className=\"font-medium\">Predicted Churn (in preview)</span>\r\n                <span className=\"text-gray-600\">{churnCount}</span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center p-4 bg-gray-50 rounded\">\r\n                <span className=\"font-medium\">Churn Risk (in preview)</span>\r\n                <span className=\"text-gray-600\">{churnRiskPercentage}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-8 text-center\">\r\n            <Link to=\"/\" className=\"text-blue-600 hover:text-blue-800\">\r\n              Back to Home\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}