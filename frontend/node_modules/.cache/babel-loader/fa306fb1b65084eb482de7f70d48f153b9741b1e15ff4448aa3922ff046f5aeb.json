{"ast":null,"code":"var _jsxFileName = \"F:\\\\grad2\\\\TelePredict\\\\frontend\\\\src\\\\components\\\\prediction-page.tsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { FileText } from \"lucide-react\";\nimport { useState } from \"react\";\n\n// Define interfaces for the API responses\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// interface PredictionResponseData { // Removed\n//   predictions: (string | number | boolean)[];\n// }\n\n// For displaying combined data // This interface might not be strictly needed if not combining\n// interface DisplayRow extends Record<string, any> { // Can be removed if not used\n//   _prediction?: string | number | boolean;\n// }\n\nexport default function PredictionPage() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // State for data from /api/upload/\n  const [apiResponse, setApiResponse] = useState(null); // Reverted from uploadedFileData\n\n  // State for data from /api/predict/ // Removed\n  // const [predictionResults, setPredictionResults] = useState<PredictionResponseData | null>(null);\n\n  const [isLoading, setIsLoading] = useState(false); // Reverted from isUploading\n  // const [isPredicting, setIsPredicting] = useState<boolean>(false); // Removed\n\n  const [error, setError] = useState(null);\n  const [uploadSuccessMessage, setUploadSuccessMessage] = useState(null);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n      setApiResponse(null); // Reset previous response\n      // setPredictionResults(null); // Removed\n      setError(null);\n      setUploadSuccessMessage(null);\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setError(\"Please select a file first.\");\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setApiResponse(null); // Clear previous prediction results\n    setUploadSuccessMessage(null); // Clear previous success message\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n\n    // Retrieve the token from where you stored it (e.g., localStorage)\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      setError(\"Authentication token not found. Please log in.\");\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/upload/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        let errorMessage = `HTTP error! status: ${response.status}`;\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.message || errorData.detail || errorMessage;\n        } catch (e) {\n          errorMessage = response.statusText || errorMessage;\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json(); // Type changed to ApiResponse\n      setApiResponse(data); // Set apiResponse\n      setUploadSuccessMessage(\"File uploaded successfully! Preview below.\"); // Adjusted message\n    } catch (err) {\n      setError(err.message || \"Failed to upload file.\");\n    } finally {\n      setIsLoading(false); // Reverted from setIsUploading\n    }\n  };\n\n  // const handleGetPrediction = async () => { // Entire function removed\n  //   if (!uploadedFileData || !uploadedFileData.file_id) {\n  //     setError(\"No file uploaded or file ID is missing. Please upload a file first.\");\n  //     return;\n  //   }\n\n  //   setIsPredicting(true);\n  //   setError(null);\n  //   setPredictionResults(null); // Clear previous predictions\n\n  //   const authToken = localStorage.getItem(\"authToken\");\n  //   if (!authToken) {\n  //     setError(\"Authentication token not found. Please log in.\");\n  //     setIsPredicting(false);\n  //     return;\n  //   }\n\n  //   try {\n  //     const response = await fetch(\"http://127.0.0.1:8000/api/predict/\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         Authorization: `Bearer ${authToken}`,\n  //         \"Content-Type\": \"application/json\", // Important: Sending JSON\n  //       },\n  //       body: JSON.stringify({ file_id: uploadedFileData.file_id }), // Send file_id\n  //     });\n\n  //     if (!response.ok) {\n  //       let errorMessage = `HTTP error! status: ${response.status}`;\n  //       try {\n  //           const errorData = await response.json();\n  //           errorMessage = errorData.message || errorData.detail || errorMessage;\n  //       } catch (e) {\n  //           errorMessage = response.statusText || errorMessage;\n  //       }\n  //       throw new Error(errorMessage);\n  //     }\n\n  //     const data: PredictionResponseData = await response.json();\n  //     setPredictionResults(data);\n\n  //   } catch (err: any) {\n  //     setError(err.message || \"Failed to get predictions.\");\n  //   } finally {\n  //     setIsPredicting(false);\n  //   }\n  // }\n\n  // --- Calculate summary statistics for \"Prediction Results\" section --- // Removed prediction related stats\n  // let totalPreviewRows = 0;\n  // if (apiResponse?.preview) {\n  //   totalPreviewRows = apiResponse.preview.length;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-8\",\n          children: \"Churn Prediction (Upload Only)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"1. Upload Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              className: \"mx-auto h-12 w-12 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-upload\",\n                className: \"cursor-pointer bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",\n                children: \"Choose File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file-upload\",\n                type: \"file\",\n                className: \"hidden\",\n                accept: \".csv\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 text-sm text-gray-500\",\n                children: \"or drag and drop (drag and drop not implemented yet)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 text-sm text-green-600\",\n                children: [\"Selected file: \", selectedFile.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), selectedFile && !apiResponse && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleFileUpload,\n              disabled: isLoading,\n              className: \"mt-4 bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:bg-gray-400\",\n              children: isLoading ? \"Uploading...\" : \"Upload File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), error && !uploadSuccessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-sm text-red-600 text-center\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), uploadSuccessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-sm text-green-600 text-center\",\n            children: uploadSuccessMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), apiResponse && apiResponse.preview && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: \"Data Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mb-4\",\n            children: [\"First \", apiResponse.preview.length, \" rows of the processed data.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"min-w-full divide-y divide-gray-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: apiResponse.columns.map((colName, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: colName\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bg-white divide-y divide-gray-200\",\n                children: apiResponse.preview.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: apiResponse.columns.map((colName, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                    children: String(row[colName])\n                  }, colIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 27\n                  }, this))\n                }, rowIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), apiResponse.columns.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mt-6 mb-2\",\n              children: \"Column Names\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc list-inside pl-5 text-sm text-gray-700\",\n              children: apiResponse.columns.map((colName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: colName\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"text-blue-600 hover:text-blue-800\",\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(PredictionPage, \"K/0tZHNUIQIlA2kMhKbf3bWFu6E=\");\n_c = PredictionPage;\nvar _c;\n$RefreshReg$(_c, \"PredictionPage\");","map":{"version":3,"names":["Link","FileText","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PredictionPage","_s","selectedFile","setSelectedFile","apiResponse","setApiResponse","isLoading","setIsLoading","error","setError","uploadSuccessMessage","setUploadSuccessMessage","handleFileChange","event","target","files","handleFileUpload","formData","FormData","append","accessToken","localStorage","getItem","response","fetch","method","headers","Authorization","authToken","body","ok","errorMessage","status","errorData","json","message","detail","e","statusText","Error","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","accept","onChange","name","onClick","disabled","preview","length","columns","map","colName","index","scope","row","rowIndex","colIndex","String","to","_c","$RefreshReg$"],"sources":["F:/grad2/TelePredict/frontend/src/components/prediction-page.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { FileText } from \"lucide-react\";\r\nimport { useState, ChangeEvent } from \"react\";\r\n\r\n// Define interfaces for the API responses\r\ninterface ApiResponse { // Renamed back from UploadResponseData, removed file_id\r\n  preview: any[];\r\n  columns: string[];\r\n}\r\n\r\n// interface PredictionResponseData { // Removed\r\n//   predictions: (string | number | boolean)[];\r\n// }\r\n\r\n// For displaying combined data // This interface might not be strictly needed if not combining\r\n// interface DisplayRow extends Record<string, any> { // Can be removed if not used\r\n//   _prediction?: string | number | boolean;\r\n// }\r\n\r\n\r\nexport default function PredictionPage() {\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  \r\n  // State for data from /api/upload/\r\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null); // Reverted from uploadedFileData\r\n  \r\n  // State for data from /api/predict/ // Removed\r\n  // const [predictionResults, setPredictionResults] = useState<PredictionResponseData | null>(null);\r\n  \r\n  const [isLoading, setIsLoading] = useState<boolean>(false); // Reverted from isUploading\r\n  // const [isPredicting, setIsPredicting] = useState<boolean>(false); // Removed\r\n  \r\n  const [error, setError] = useState<string | null>(null);\r\n  const [uploadSuccessMessage, setUploadSuccessMessage] = useState<string | null>(null);\r\n\r\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setSelectedFile(event.target.files[0]);\r\n      setApiResponse(null); // Reset previous response\r\n      // setPredictionResults(null); // Removed\r\n      setError(null);\r\n      setUploadSuccessMessage(null);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      setError(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setApiResponse(null); // Clear previous prediction results\r\n    setUploadSuccessMessage(null); // Clear previous success message\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    // Retrieve the token from where you stored it (e.g., localStorage)\r\n    const accessToken = localStorage.getItem(\"accessToken\"); \r\n\r\n    if (!accessToken) {\r\n      setError(\"Authentication token not found. Please log in.\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/upload/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${authToken}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        let errorMessage = `HTTP error! status: ${response.status}`;\r\n        try {\r\n            const errorData = await response.json();\r\n            errorMessage = errorData.message || errorData.detail || errorMessage;\r\n        } catch (e) {\r\n            errorMessage = response.statusText || errorMessage;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      const data: ApiResponse = await response.json(); // Type changed to ApiResponse\r\n      setApiResponse(data); // Set apiResponse\r\n      setUploadSuccessMessage(\"File uploaded successfully! Preview below.\"); // Adjusted message\r\n\r\n    } catch (err: any) {\r\n      setError(err.message || \"Failed to upload file.\");\r\n    } finally {\r\n      setIsLoading(false); // Reverted from setIsUploading\r\n    }\r\n  };\r\n\r\n  // const handleGetPrediction = async () => { // Entire function removed\r\n  //   if (!uploadedFileData || !uploadedFileData.file_id) {\r\n  //     setError(\"No file uploaded or file ID is missing. Please upload a file first.\");\r\n  //     return;\r\n  //   }\r\n  \r\n  //   setIsPredicting(true);\r\n  //   setError(null);\r\n  //   setPredictionResults(null); // Clear previous predictions\r\n  \r\n  //   const authToken = localStorage.getItem(\"authToken\");\r\n  //   if (!authToken) {\r\n  //     setError(\"Authentication token not found. Please log in.\");\r\n  //     setIsPredicting(false);\r\n  //     return;\r\n  //   }\r\n  \r\n  //   try {\r\n  //     const response = await fetch(\"http://127.0.0.1:8000/api/predict/\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${authToken}`,\r\n  //         \"Content-Type\": \"application/json\", // Important: Sending JSON\r\n  //       },\r\n  //       body: JSON.stringify({ file_id: uploadedFileData.file_id }), // Send file_id\r\n  //     });\r\n  \r\n  //     if (!response.ok) {\r\n  //       let errorMessage = `HTTP error! status: ${response.status}`;\r\n  //       try {\r\n  //           const errorData = await response.json();\r\n  //           errorMessage = errorData.message || errorData.detail || errorMessage;\r\n  //       } catch (e) {\r\n  //           errorMessage = response.statusText || errorMessage;\r\n  //       }\r\n  //       throw new Error(errorMessage);\r\n  //     }\r\n  \r\n  //     const data: PredictionResponseData = await response.json();\r\n  //     setPredictionResults(data);\r\n  \r\n  //   } catch (err: any) {\r\n  //     setError(err.message || \"Failed to get predictions.\");\r\n  //   } finally {\r\n  //     setIsPredicting(false);\r\n  //   }\r\n  // }\r\n  \r\n  // --- Calculate summary statistics for \"Prediction Results\" section --- // Removed prediction related stats\r\n  // let totalPreviewRows = 0;\r\n  // if (apiResponse?.preview) {\r\n  //   totalPreviewRows = apiResponse.preview.length;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          <h1 className=\"text-3xl font-bold mb-8\">Churn Prediction (Upload Only)</h1>\r\n          \r\n          <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">1. Upload Data</h2>\r\n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\r\n              <FileText className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n              <div className=\"mt-4\">\r\n                <label htmlFor=\"file-upload\" className=\"cursor-pointer bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\">\r\n                  Choose File\r\n                </label>\r\n                <input id=\"file-upload\" type=\"file\" className=\"hidden\" accept=\".csv\" onChange={handleFileChange} />\r\n                <p className=\"mt-2 text-sm text-gray-500\">or drag and drop (drag and drop not implemented yet)</p>\r\n                {selectedFile && (\r\n                  <p className=\"mt-2 text-sm text-green-600\">Selected file: {selectedFile.name}</p>\r\n                )}\r\n              </div>\r\n              {selectedFile && !apiResponse && (\r\n                <button\r\n                  onClick={handleFileUpload}\r\n                  disabled={isLoading}\r\n                  className=\"mt-4 bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:bg-gray-400\"\r\n                >\r\n                  {isLoading ? \"Uploading...\" : \"Upload File\"}\r\n                </button>\r\n              )}\r\n            </div>\r\n            {error && !uploadSuccessMessage && ( \r\n              <p className=\"mt-4 text-sm text-red-600 text-center\">{error}</p>\r\n            )}\r\n            {uploadSuccessMessage && (\r\n              <p className=\"mt-4 text-sm text-green-600 text-center\">{uploadSuccessMessage}</p>\r\n            )}\r\n          </div>\r\n          \r\n          {apiResponse && apiResponse.preview && (\r\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n              <h2 className=\"text-xl font-semibold mb-2\">Data Preview</h2>\r\n              <p className=\"text-sm text-gray-600 mb-4\">\r\n                First {apiResponse.preview.length} rows of the processed data.\r\n              </p>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      {apiResponse.columns.map((colName, index) => (\r\n                        <th key={index} scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          {colName}\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {apiResponse.preview.map((row: Record<string, any>, rowIndex: number) => (\r\n                      <tr key={rowIndex}>\r\n                        {apiResponse.columns.map((colName, colIndex) => (\r\n                          <td key={colIndex} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {String(row[colName])}\r\n                          </td>\r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              {apiResponse.columns.length > 0 && (\r\n                <>\r\n                  <h3 className=\"text-lg font-semibold mt-6 mb-2\">Column Names</h3>\r\n                  <ul className=\"list-disc list-inside pl-5 text-sm text-gray-700\">\r\n                    {apiResponse.columns.map((colName, index) => (\r\n                      <li key={index}>{colName}</li>\r\n                    ))}\r\n                  </ul>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mt-8 text-center\">\r\n            <Link to=\"/\" className=\"text-blue-600 hover:text-blue-800\">\r\n              Back to Home\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}